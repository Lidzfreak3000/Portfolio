*, ::before, ::after {
    --tw-border-spacing-x: 0;
    --tw-border-spacing-y: 0;
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    --tw-pan-x: ;
    --tw-pan-y: ;
    --tw-pinch-zoom: ;
    --tw-scroll-snap-strictness: proximity;
    --tw-gradient-from-position: ;
    --tw-gradient-via-position: ;
    --tw-gradient-to-position: ;
    --tw-ordinal: ;
    --tw-slashed-zero: ;
    --tw-numeric-figure: ;
    --tw-numeric-spacing: ;
    --tw-numeric-fraction: ;
    --tw-ring-inset: ;
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: rgb(59 130 246 / 0.5);
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    --tw-blur: ;
    --tw-brightness: ;
    --tw-contrast: ;
    --tw-grayscale: ;
    --tw-hue-rotate: ;
    --tw-invert: ;
    --tw-saturate: ;
    --tw-sepia: ;
    --tw-drop-shadow: ;
    --tw-backdrop-blur: ;
    --tw-backdrop-brightness: ;
    --tw-backdrop-contrast: ;
    --tw-backdrop-grayscale: ;
    --tw-backdrop-hue-rotate: ;
    --tw-backdrop-invert: ;
    --tw-backdrop-opacity: ;
    --tw-backdrop-saturate: ;
    --tw-backdrop-sepia: ;
    --tw-contain-size: ;
    --tw-contain-layout: ;
    --tw-contain-paint: ;
    --tw-contain-style: ;
  }
  ::backdrop {
    --tw-border-spacing-x: 0;
    --tw-border-spacing-y: 0;
    --tw-translate-x: 0;
    --tw-translate-y: 0;
    --tw-rotate: 0;
    --tw-skew-x: 0;
    --tw-skew-y: 0;
    --tw-scale-x: 1;
    --tw-scale-y: 1;
    --tw-pan-x: ;
    --tw-pan-y: ;
    --tw-pinch-zoom: ;
    --tw-scroll-snap-strictness: proximity;
    --tw-gradient-from-position: ;
    --tw-gradient-via-position: ;
    --tw-gradient-to-position: ;
    --tw-ordinal: ;
    --tw-slashed-zero: ;
    --tw-numeric-figure: ;
    --tw-numeric-spacing: ;
    --tw-numeric-fraction: ;
    --tw-ring-inset: ;
    --tw-ring-offset-width: 0px;
    --tw-ring-offset-color: #fff;
    --tw-ring-color: rgb(59 130 246 / 0.5);
    --tw-ring-offset-shadow: 0 0 #0000;
    --tw-ring-shadow: 0 0 #0000;
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    --tw-blur: ;
    --tw-brightness: ;
    --tw-contrast: ;
    --tw-grayscale: ;
    --tw-hue-rotate: ;
    --tw-invert: ;
    --tw-saturate: ;
    --tw-sepia: ;
    --tw-drop-shadow: ;
    --tw-backdrop-blur: ;
    --tw-backdrop-brightness: ;
    --tw-backdrop-contrast: ;
    --tw-backdrop-grayscale: ;
    --tw-backdrop-hue-rotate: ;
    --tw-backdrop-invert: ;
    --tw-backdrop-opacity: ;
    --tw-backdrop-saturate: ;
    --tw-backdrop-sepia: ;
    --tw-contain-size: ;
    --tw-contain-layout: ;
    --tw-contain-paint: ;
    --tw-contain-style: ;
  }
  /*
  ! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
  */
  /*
  1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
  2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
  */
  *,
  ::before,
  ::after {
    box-sizing: border-box;
    /* 1 */
    border-width: 0;
    /* 2 */
    border-style: solid;
    /* 2 */
    border-color: #e5e7eb;
    /* 2 */
  }
  ::before,
  ::after {
    --tw-content: '';
  }
  /*
  1. Use a consistent sensible line-height in all browsers.
  2. Prevent adjustments of font size after orientation changes in iOS.
  3. Use a more readable tab size.
  4. Use the user's configured `sans` font-family by default.
  5. Use the user's configured `sans` font-feature-settings by default.
  6. Use the user's configured `sans` font-variation-settings by default.
  7. Disable tap highlights on iOS
  */
  html,
  :host {
    line-height: 1.5;
    /* 1 */
    -webkit-text-size-adjust: 100%;
    /* 2 */
    -moz-tab-size: 4;
    /* 3 */
    tab-size: 4;
    /* 3 */
    font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    /* 4 */
    font-feature-settings: normal;
    /* 5 */
    font-variation-settings: normal;
    /* 6 */
    -webkit-tap-highlight-color: transparent;
    /* 7 */
  }
  /*
  1. Remove the margin in all browsers.
  2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
  */
  body {
    margin: 0;
    /* 1 */
    line-height: inherit;
    /* 2 */
  }
  /*
  1. Add the correct height in Firefox.
  2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
  3. Ensure horizontal rules are visible by default.
  */
  hr {
    height: 0;
    /* 1 */
    color: inherit;
    /* 2 */
    border-top-width: 1px;
    /* 3 */
  }
  /*
  Add the correct text decoration in Chrome, Edge, and Safari.
  */
  abbr:where([title]) {
    text-decoration: underline dotted;
  }
  /*
  Remove the default font size and weight for headings.
  */
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  /*
  Reset links to optimize for opt-in styling instead of opt-out.
  */
  a {
    color: inherit;
    text-decoration: inherit;
  }
  /*
  Add the correct font weight in Edge and Safari.
  */
  b,
  strong {
    font-weight: bolder;
  }
  /*
  1. Use the user's configured `mono` font-family by default.
  2. Use the user's configured `mono` font-feature-settings by default.
  3. Use the user's configured `mono` font-variation-settings by default.
  4. Correct the odd `em` font sizing in all browsers.
  */
  code,
  kbd,
  samp,
  pre {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    /* 1 */
    font-feature-settings: normal;
    /* 2 */
    font-variation-settings: normal;
    /* 3 */
    font-size: 1em;
    /* 4 */
  }
  /*
  Add the correct font size in all browsers.
  */
  small {
    font-size: 80%;
  }
  /*
  Prevent `sub` and `sup` elements from affecting the line height in all browsers.
  */
  sub,
  sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  /*
  1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
  2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
  3. Remove gaps between table borders by default.
  */
  table {
    text-indent: 0;
    /* 1 */
    border-color: inherit;
    /* 2 */
    border-collapse: collapse;
    /* 3 */
  }
  /*
  1. Change the font styles in all browsers.
  2. Remove the margin in Firefox and Safari.
  3. Remove default padding in all browsers.
  */
  button,
  input,
  optgroup,
  select,
  textarea {
    font-family: inherit;
    /* 1 */
    font-feature-settings: inherit;
    /* 1 */
    font-variation-settings: inherit;
    /* 1 */
    font-size: 100%;
    /* 1 */
    font-weight: inherit;
    /* 1 */
    line-height: inherit;
    /* 1 */
    letter-spacing: inherit;
    /* 1 */
    color: inherit;
    /* 1 */
    margin: 0;
    /* 2 */
    padding: 0;
    /* 3 */
  }
  /*
  Remove the inheritance of text transform in Edge and Firefox.
  */
  button,
  select {
    text-transform: none;
  }
  /*
  1. Correct the inability to style clickable types in iOS and Safari.
  2. Remove default button styles.
  */
  button,
  input:where([type='button']),
  input:where([type='reset']),
  input:where([type='submit']) {
    /* 1 */
    background-color: transparent;
    /* 2 */
    background-image: none;
    /* 2 */
  }
  /*
  Use the modern Firefox focus style for all focusable elements.
  */
  :-moz-focusring {
    outline: auto;
  }
  /*
  Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
  */
  :-moz-ui-invalid {
    box-shadow: none;
  }
  /*
  Add the correct vertical alignment in Chrome and Firefox.
  */
  progress {
    vertical-align: baseline;
  }
  /*
  Correct the cursor style of increment and decrement buttons in Safari.
  */
  ::-webkit-inner-spin-button,
  ::-webkit-outer-spin-button {
    height: auto;
  }
  /*
  1. Correct the odd appearance in Chrome and Safari.
  2. Correct the outline style in Safari.
  */
  [type='search'] {
    /* 1 */
    outline-offset: -2px;
    /* 2 */
  }
  /*
  Remove the inner padding in Chrome and Safari on macOS.
  */
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  /*
  1. Correct the inability to style clickable types in iOS and Safari.
  2. Change font properties to `inherit` in Safari.
  */
  ::-webkit-file-upload-button {
    -webkit-appearance: button;
    /* 1 */
    font: inherit;
    /* 2 */
  }
  /*
  Add the correct display in Chrome and Safari.
  */
  summary {
    display: list-item;
  }
  /*
  Removes the default spacing and border for appropriate elements.
  */
  blockquote,
  dl,
  dd,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  hr,
  figure,
  p,
  pre {
    margin: 0;
  }
  fieldset {
    margin: 0;
    padding: 0;
  }
  legend {
    padding: 0;
  }
  ol,
  ul,
  menu {
    list-style: none;
    margin: 0;
    padding: 0;
  }
  /*
  Reset default styling for dialogs.
  */
  dialog {
    padding: 0;
  }
  /*
  Prevent resizing textareas horizontally by default.
  */
  textarea {
    resize: vertical;
  }
  /*
  1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
  2. Set the default placeholder color to the user's configured gray 400 color.
  */
  input::placeholder,
  textarea::placeholder {
    opacity: 1;
    /* 1 */
    color: #9ca3af;
    /* 2 */
  }
  /*
  Set the default cursor for buttons.
  */
  button,
  [role="button"] {
    cursor: pointer;
  }
  /*
  Make sure disabled buttons don't get the pointer cursor.
  */
  :disabled {
    cursor: default;
  }
  /*
  1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
  2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
     This can trigger a poorly considered lint error in some tools but is included by design.
  */
  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    display: block;
    /* 1 */
  }
  /*
  Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
  */
  img,
  video {
    max-width: 100%;
    height: auto;
  }
  /* Make elements with the HTML hidden attribute stay hidden by default */
  [hidden]:where(:not([hidden="until-found"])) {
    display: none;
  }
  :where(:root),:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
  @media (prefers-color-scheme: dark) {
    :root {
      color-scheme: dark;
      --color-base-100: oklch(25.33% 0.016 252.42);
      --color-base-200: oklch(23.26% 0.014 253.1);
      --color-base-300: oklch(21.15% 0.012 254.09);
      --color-base-content: oklch(97.807% 0.029 256.847);
      --color-primary: oklch(58% 0.233 277.117);
      --color-primary-content: oklch(96% 0.018 272.314);
      --color-secondary: oklch(65% 0.241 354.308);
      --color-secondary-content: oklch(94% 0.028 342.258);
      --color-accent: oklch(77% 0.152 181.912);
      --color-accent-content: oklch(38% 0.063 188.416);
      --color-neutral: oklch(14% 0.005 285.823);
      --color-neutral-content: oklch(92% 0.004 286.32);
      --color-info: oklch(74% 0.16 232.661);
      --color-info-content: oklch(29% 0.066 243.157);
      --color-success: oklch(76% 0.177 163.223);
      --color-success-content: oklch(37% 0.077 168.94);
      --color-warning: oklch(82% 0.189 84.429);
      --color-warning-content: oklch(41% 0.112 45.904);
      --color-error: oklch(71% 0.194 13.428);
      --color-error-content: oklch(27% 0.105 12.094);
      --radius-selector: 0.5rem;
      --radius-field: 0.25rem;
      --radius-box: 0.5rem;
      --size-selector: 0.25rem;
      --size-field: 0.25rem;
      --border: 1px;
      --depth: 1;
      --noise: 0;
    }
  }
  :root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
    color-scheme: light;
    --color-base-100: oklch(100% 0 0);
    --color-base-200: oklch(98% 0 0);
    --color-base-300: oklch(95% 0 0);
    --color-base-content: oklch(21% 0.006 285.885);
    --color-primary: oklch(45% 0.24 277.023);
    --color-primary-content: oklch(93% 0.034 272.788);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
  :root:has(input.theme-controller[value=dark]:checked),[data-theme=dark] {
    color-scheme: dark;
    --color-base-100: oklch(25.33% 0.016 252.42);
    --color-base-200: oklch(23.26% 0.014 253.1);
    --color-base-300: oklch(21.15% 0.012 254.09);
    --color-base-content: oklch(97.807% 0.029 256.847);
    --color-primary: oklch(58% 0.233 277.117);
    --color-primary-content: oklch(96% 0.018 272.314);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
  @property --radialprogress {
    syntax: "<percentage>";
    inherits: true;
    initial-value: 0%;
  }
  :root {
    scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
  }
  :root, [data-theme] {
    background-color: var(--root-bg, var(--color-base-100));
    color: var(--color-base-content);
  }
  :root {
    --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
  }
  @keyframes skeleton {
    0% {
      background-position: 150%;
    }
    100% {
      background-position: -50%;
    }
  }
  @keyframes progress {
    50% {
      background-position-x: -115%;
    }
  }
  .input {
    cursor: text;
    border: var(--border) solid #0000;
    position: relative;
    display: inline-flex;
    flex-shrink: 1;
    appearance: none;
    align-items: center;
    gap: calc(0.25rem * 2);
    background-color: var(--color-base-100);
    padding-inline: calc(0.25rem * 3);
    vertical-align: middle;
    white-space: nowrap;
    width: clamp(3rem, 20rem, 100%);
    height: var(--size);
    font-size: 0.875rem;
    border-start-start-radius: var(--join-ss, var(--radius-field));
    border-start-end-radius: var(--join-se, var(--radius-field));
    border-end-start-radius: var(--join-es, var(--radius-field));
    border-end-end-radius: var(--join-ee, var(--radius-field));
    border-color: var(--input-color);
    box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
    --size: calc(var(--size-field, 0.25rem) * 10);
    --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
  }
  .input:where(input) {
    display: inline-flex;
  }
  .input :where(input) {
    display: inline-flex;
    height: 100%;
    width: 100%;
    appearance: none;
    background-color: transparent;
    border: none;
  }
  .input :where(input):focus, .input :where(input):focus-within {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .input :where(input):focus, .input :where(input):focus-within {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .input :where(input[type="date"]) {
    display: inline-block;
  }
  .input:focus, .input:focus-within {
    --input-color: var(--color-base-content);
    box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
    outline: 2px solid var(--input-color);
    outline-offset: 2px;
    isolation: isolate;
  }
  .input:has(> input[disabled]), .input:is(:disabled, [disabled]) {
    cursor: not-allowed;
    border-color: var(--color-base-200);
    background-color: var(--color-base-200);
    color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
  }
  .input:has(> input[disabled])::placeholder, .input:is(:disabled, [disabled])::placeholder {
    color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
  }
  .input:has(> input[disabled]), .input:is(:disabled, [disabled]) {
    box-shadow: none;
  }
  .input:has(> input[disabled]) > input[disabled] {
    cursor: not-allowed;
  }
  .input::-webkit-date-and-time-value {
    text-align: inherit;
  }
  .input[type="number"]::-webkit-inner-spin-button {
    margin-block: calc(0.25rem * -3);
    margin-inline-end: calc(0.25rem * -3);
  }
  .input::-webkit-calendar-picker-indicator {
    position: absolute;
    inset-inline-end: 0.75em;
  }
  .radio {
    position: relative;
    flex-shrink: 0;
    cursor: pointer;
    appearance: none;
    border-radius: calc(infinity * 1px);
    padding: calc(0.25rem * 1);
    vertical-align: middle;
    border: var(--border) solid var(--input-color, color-mix(in srgb, currentColor 20%, #0000));
    box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset;
    --size: calc(var(--size-selector, 0.25rem) * 6);
    width: var(--size);
    height: var(--size);
    color: var(--input-color, currentColor);
  }
  .radio:before {
    display: block;
    width: 100%;
    height: 100%;
    border-radius: calc(infinity * 1px);
    --tw-content: "";
    content: var(--tw-content);
    background-size: auto, calc(var(--noise) * 100%);
    background-image: none, var(--fx-noise);
  }
  .radio:focus-visible {
    outline: 2px solid currentColor;
  }
  .radio:checked, .radio[aria-checked="true"] {
    animation: radio 0.2s ease-out;
    border-color: currentColor;
    background-color: var(--color-base-100);
  }
  .radio:checked:before, .radio[aria-checked="true"]:before {
    background-color: currentColor;
    box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
  }
  @media (forced-colors: active) {
    .radio:checked:before, .radio[aria-checked="true"]:before {
      outline-style: var(--tw-outline-style);
      outline-width: 1px;
      outline-offset: calc(1px * -1);
    }
  }
  @media print {
    .radio:checked:before, .radio[aria-checked="true"]:before {
      outline: 0.25rem solid;
      outline-offset: -1rem;
    }
  }
  .radio:disabled {
    cursor: not-allowed;
    opacity: 20%;
  }
  @keyframes radio {
    0% {
      padding: 5px;
    }
    50% {
      padding: 3px;
    }
  }
  .label:is(.input > *, .select > *) {
    display: flex;
    height: calc(100% - 0.5rem);
    align-items: center;
    padding-inline: calc(0.25rem * 3);
    white-space: nowrap;
    font-size: inherit;
  }
  .label:is(.input > *, .select > *):first-child {
    margin-inline-start: calc(0.25rem * -3);
    margin-inline-end: calc(0.25rem * 3);
    border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
  }
  .label:is(.input > *, .select > *):last-child {
    margin-inline-start: calc(0.25rem * 3);
    margin-inline-end: calc(0.25rem * -3);
    border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
  }
  .tabs {
    display: flex;
    flex-wrap: wrap;
    --tabs-height: auto;
    --tabs-direction: row;
    height: var(--tabs-height);
    flex-direction: var(--tabs-direction);
  }
  .tab {
    position: relative;
    display: inline-flex;
    cursor: pointer;
    appearance: none;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    text-align: center;
    -webkit-user-select: none;
    user-select: none;
  }
  @media (hover: hover) {
    .tab:hover {
      color: var(--color-base-content);
    }
  }
  .tab {
    --tab-p: 1rem;
    --tab-bg: var(--color-base-100);
    --tab-border-color: var(--color-base-300);
    --tab-radius-ss: 0;
    --tab-radius-se: 0;
    --tab-radius-es: 0;
    --tab-radius-ee: 0;
    --tab-order: 0;
    --tab-radius-min: calc(0.75rem - var(--border));
    border-color: #0000;
    order: var(--tab-order);
    height: calc(var(--size-field, 0.25rem) * 10);
    font-size: 0.875rem;
    padding-inline-start: var(--tab-p);
    padding-inline-end: var(--tab-p);
  }
  .tab:is(input[type="radio"]) {
    min-width: fit-content;
  }
  .tab:is(input[type="radio"]):after {
    content: attr(aria-label);
  }
  .tab:is(label) {
    position: relative;
  }
  .tab:is(label) input {
    position: absolute;
    inset: calc(0.25rem * 0);
    cursor: pointer;
    appearance: none;
    opacity: 0%;
  }
  .tab:checked + .tab-content, .tab:is(label:has(:checked)) + .tab-content, .tab:is(.tab-active, [aria-selected="true"]) + .tab-content {
    display: block;
    height: 100%;
  }
  .tab:not(:checked, label:has(:checked), :hover, .tab-active, [aria-selected="true"]) {
    color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
  }
  .tab:not(input):empty {
    flex-grow: 1;
    cursor: default;
  }
  .tab:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .tab:focus {
      outline: 2px solid transparent;
      outline-offset: 2px;
    }
  }
  .tab:focus-visible, .tab:is(label:has(:checked:focus-visible)) {
    outline: 2px solid currentColor;
    outline-offset: -5px;
  }
  .tab[disabled] {
    pointer-events: none;
    opacity: 40%;
  }
  .tabs-border .tab {
    --tab-border-color: #0000 #0000 var(--tab-border-color) #0000;
    position: relative;
    border-radius: var(--radius-field);
  }
  .tabs-border .tab:before {
    --tw-content: "";
    content: var(--tw-content);
    background-color: var(--tab-border-color);
    transition: background-color 0.2s ease;
    width: 80%;
    height: 3px;
    border-radius: var(--radius-field);
    bottom: 0;
    left: 10%;
    position: absolute;
  }
  .tabs-border .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):before, .tabs-border .tab:is(input:checked):before, .tabs-border .tab:is(label:has(:checked)):before {
    --tab-border-color: currentColor;
    border-top: 3px solid;
  }
  .tabs-lift > .tab {
    --tab-border: 0 0 var(--border) 0;
    --tab-radius-ss: min(var(--radius-field), var(--tab-radius-min));
    --tab-radius-se: min(var(--radius-field), var(--tab-radius-min));
    --tab-radius-es: 0;
    --tab-radius-ee: 0;
    --tab-paddings: var(--border) var(--tab-p) 0 var(--tab-p);
    --tab-border-colors: #0000 #0000 var(--tab-border-color) #0000;
    --tab-corner-width: calc(100% + min(var(--radius-field), var(--tab-radius-min)) * 2);
    --tab-corner-height: min(var(--radius-field), var(--tab-radius-min));
    --tab-corner-position: top left, top right;
    border-width: var(--tab-border);
    border-start-start-radius: var(--tab-radius-ss);
    border-start-end-radius: var(--tab-radius-se);
    border-end-start-radius: var(--tab-radius-es);
    border-end-end-radius: var(--tab-radius-ee);
    padding: var(--tab-paddings);
    border-color: var(--tab-border-colors);
  }
  .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), .tabs-lift > .tab:is(input:checked, label:has(:checked)) {
    --tab-border: var(--border) var(--border) 0 var(--border);
    --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
          var(--tab-border-color);
    --tab-paddings: 0 calc(var(--tab-p) - var(--border)) var(--border)
          calc(var(--tab-p) - var(--border));
    --tab-inset: auto auto 0 auto;
    --tab-grad: calc(69% - var(--border));
    --radius-start: radial-gradient(
          circle at top left,
          #0000 var(--tab-grad),
          var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
          var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
          var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
        );
    --radius-end: radial-gradient(
          circle at top right,
          #0000 var(--tab-grad),
          var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
          var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
          var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
        );
    background-color: var(--tab-bg);
  }
  .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):before, .tabs-lift > .tab:is(input:checked, label:has(:checked)):before {
    z-index: 1;
    content: "";
    display: block;
    position: absolute;
    width: var(--tab-corner-width);
    height: var(--tab-corner-height);
    background-position: var(--tab-corner-position);
    background-image: var(--radius-start), var(--radius-end);
    background-size: min(var(--radius-field), var(--tab-radius-min)) min(var(--radius-field), var(--tab-radius-min));
    background-repeat: no-repeat;
    inset: var(--tab-inset);
  }
  .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):first-child:before, .tabs-lift > .tab:is(input:checked, label:has(:checked)):first-child:before {
    --radius-start: none;
  }
  [dir="rtl"] .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):first-child:before, [dir="rtl"] .tabs-lift > .tab:is(input:checked, label:has(:checked)):first-child:before {
    transform: rotateY(180deg);
  }
  .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):last-child:before, .tabs-lift > .tab:is(input:checked, label:has(:checked)):last-child:before {
    --radius-end: none;
  }
  [dir="rtl"] .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):last-child:before, [dir="rtl"] .tabs-lift > .tab:is(input:checked, label:has(:checked)):last-child:before {
    transform: rotateY(180deg);
  }
  .tabs-lift:has(.tab-content) > .tab:first-child:not(.tab-active, [aria-selected="true"]) {
    --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
            var(--tab-border-color);
  }
  .tabs-lift .tab-content {
    --tabcontent-margin: calc(-1 * var(--border)) 0 0 0;
    --tabcontent-radius-ss: 0;
    --tabcontent-radius-se: var(--radius-box);
    --tabcontent-radius-es: var(--radius-box);
    --tabcontent-radius-ee: var(--radius-box);
  }
  .tabs-lift :checked + .tab-content:nth-child(1), .tabs-lift :checked + .tab-content:nth-child(n + 3), .tabs-lift label:has(:checked) + .tab-content:nth-child(1), .tabs-lift label:has(:checked) + .tab-content:nth-child(n + 3), .tabs-lift :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(1), .tabs-lift :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(n + 3) {
    --tabcontent-radius-ss: var(--radius-box);
  }
  .tabs-top .tab {
    --tab-order: 0;
    --tab-border: 0 0 var(--border) 0;
    --tab-radius-ss: min(var(--radius-field), var(--tab-radius-min));
    --tab-radius-se: min(var(--radius-field), var(--tab-radius-min));
    --tab-radius-es: 0;
    --tab-radius-ee: 0;
    --tab-paddings: var(--border) var(--tab-p) 0 var(--tab-p);
    --tab-border-colors: #0000 #0000 var(--tab-border-color) #0000;
    --tab-corner-width: calc(100% + min(var(--radius-field), var(--tab-radius-min)) * 2);
    --tab-corner-height: min(var(--radius-field), var(--tab-radius-min));
    --tab-corner-position: top left, top right;
  }
  .tabs-top .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), .tabs-top .tab:is(input:checked), .tabs-top .tab:is(label:has(:checked)) {
    --tab-border: var(--border) var(--border) 0 var(--border);
    --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
          var(--tab-border-color);
    --tab-paddings: 0 calc(var(--tab-p) - var(--border)) var(--border)
          calc(var(--tab-p) - var(--border));
    --tab-inset: auto auto 0 auto;
    --radius-start: radial-gradient(
          circle at top left,
          #0000 var(--tab-grad),
          var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
          var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
          var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
        );
    --radius-end: radial-gradient(
          circle at top right,
          #0000 var(--tab-grad),
          var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
          var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
          var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
        );
  }
  .tabs-top:has(.tab-content) > .tab:first-child:not(.tab-active, [aria-selected="true"]) {
    --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
            var(--tab-border-color);
  }
  .tabs-top .tab-content {
    --tabcontent-order: 1;
    --tabcontent-margin: calc(-1 * var(--border)) 0 0 0;
    --tabcontent-radius-ss: 0;
    --tabcontent-radius-se: var(--radius-box);
    --tabcontent-radius-es: var(--radius-box);
    --tabcontent-radius-ee: var(--radius-box);
  }
  .tabs-top :checked + .tab-content:nth-child(1), .tabs-top :checked + .tab-content:nth-child(n + 3), .tabs-top label:has(:checked) + .tab-content:nth-child(1), .tabs-top label:has(:checked) + .tab-content:nth-child(n + 3), .tabs-top :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(1), .tabs-top :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(n + 3) {
    --tabcontent-radius-ss: var(--radius-box);
  }
  .tabs-bottom .tab {
    --tab-order: 1;
    --tab-border: var(--border) 0 0 0;
    --tab-radius-ss: 0;
    --tab-radius-se: 0;
    --tab-radius-es: min(var(--radius-field), var(--tab-radius-min));
    --tab-radius-ee: min(var(--radius-field), var(--tab-radius-min));
    --tab-border-colors: var(--tab-border-color) #0000 #0000 #0000;
    --tab-paddings: 0 var(--tab-p) var(--border) var(--tab-p);
    --tab-corner-width: calc(100% + min(var(--radius-field), var(--tab-radius-min)) * 2);
    --tab-corner-height: min(var(--radius-field), var(--tab-radius-min));
    --tab-corner-position: top left, top right;
  }
  .tabs-bottom .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), .tabs-bottom .tab:is(input:checked), .tabs-bottom .tab:is(label:has(:checked)) {
    --tab-border: 0 var(--border) var(--border) var(--border);
    --tab-border-colors: #0000 var(--tab-border-color) var(--tab-border-color)
          var(--tab-border-color);
    --tab-paddings: var(--border) calc(var(--tab-p) - var(--border)) 0
          calc(var(--tab-p) - var(--border));
    --tab-inset: 0 auto auto auto;
    --radius-start: radial-gradient(
          circle at bottom left,
          #0000 var(--tab-grad),
          var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
          var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
          var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
        );
    --radius-end: radial-gradient(
          circle at bottom right,
          #0000 var(--tab-grad),
          var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
          var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
          var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
        );
  }
  .tabs-bottom:has(.tab-content) > .tab:first-child:not(.tab-active, [aria-selected="true"]) {
    --tab-border-colors: #0000 var(--tab-border-color) var(--tab-border-color)
            var(--tab-border-color);
  }
  .tabs-bottom .tab-content {
    --tabcontent-order: 0;
    --tabcontent-margin: 0 0 calc(-1 * var(--border)) 0;
    --tabcontent-radius-ss: var(--radius-box);
    --tabcontent-radius-se: var(--radius-box);
    --tabcontent-radius-es: 0;
    --tabcontent-radius-ee: var(--radius-box);
  }
  .tabs-bottom :checked + .tab-content:not(:nth-child(2)), .tabs-bottom :is(label:has(:checked)) + .tab-content:not(:nth-child(2)), .tabs-bottom :is(.tab-active, [aria-selected="true"]) + .tab-content:not(:nth-child(2)) {
    --tabcontent-radius-es: var(--radius-box);
  }
  .tabs-box .tab {
    border-radius: var(--radius-field);
    border-style: none;
  }
  .tabs-box .tab:focus-visible, .tabs-box .tab:is(label:has(:checked:focus-visible)) {
    outline-offset: 2px;
  }
  .tab-content {
    order: 1;
    order: var(--tabcontent-order);
    display: none;
    border-color: transparent;
    --tabcontent-radius-ss: 0;
    --tabcontent-radius-se: 0;
    --tabcontent-radius-es: 0;
    --tabcontent-radius-ee: 0;
    --tabcontent-order: 1;
    width: 100%;
    margin: var(--tabcontent-margin);
    border-width: var(--border);
    border-start-start-radius: var(--tabcontent-radius-ss);
    border-start-end-radius: var(--tabcontent-radius-se);
    border-end-start-radius: var(--tabcontent-radius-es);
    border-end-end-radius: var(--tabcontent-radius-ee);
  }
  .tabs-xs :where(.tab) {
    height: calc(var(--size-field, 0.25rem) * 6);
    font-size: 0.75rem;
    --tab-p: 0.375rem;
    --tab-radius-min: calc(0.5rem - var(--border));
  }
  .tabs-sm :where(.tab) {
    height: calc(var(--size-field, 0.25rem) * 8);
    font-size: 0.875rem;
    --tab-p: 0.5rem;
    --tab-radius-min: calc(0.5rem - var(--border));
  }
  .tabs-md :where(.tab) {
    height: calc(var(--size-field, 0.25rem) * 10);
    font-size: 0.875rem;
    --tab-p: 0.75rem;
    --tab-radius-min: calc(0.75rem - var(--border));
  }
  .tabs-lg :where(.tab) {
    height: calc(var(--size-field, 0.25rem) * 12);
    font-size: 1.125rem;
    --tab-p: 1rem;
    --tab-radius-min: calc(1.5rem - var(--border));
  }
  .tabs-xl :where(.tab) {
    height: calc(var(--size-field, 0.25rem) * 14);
    font-size: 1.125rem;
    --tab-p: 1.25rem;
    --tab-radius-min: calc(2rem - var(--border));
  }
  @keyframes dropdown {
    0% {
      opacity: 0;
    }
  }
  @keyframes rating {
    0%, 40% {
      scale: 1.1;
      filter: brightness(1.05) contrast(1.05);
    }
  }
  .mockup-browser .mockup-browser-toolbar .input {
    margin-inline: auto;
    display: flex;
    height: 100%;
    align-items: center;
    gap: calc(0.25rem * 2);
    overflow: hidden;
    background-color: var(--color-base-200);
    text-overflow: ellipsis;
    white-space: nowrap;
    font-size: 0.75rem;
    direction: ltr;
  }
  .mockup-browser .mockup-browser-toolbar .input:before {
    content: "";
    width: calc(0.25rem * 4);
    height: calc(0.25rem * 4);
    opacity: 30%;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='currentColor' class='size-4'%3E%3Cpath fill-rule='evenodd' d='M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z' clip-rule='evenodd' /%3E%3C/svg%3E%0A");
  }
  @keyframes toast {
    0% {
      scale: 0.9;
      opacity: 0;
    }
    100% {
      scale: 1;
      opacity: 1;
    }
  }
  .border-base-300 {
    border-color: var(--color-base-300);
  }
  .bg-base-100 {
    background-color: var(--color-base-100);
  }
  .p-10 {
    padding: 2.5rem;
  }
  